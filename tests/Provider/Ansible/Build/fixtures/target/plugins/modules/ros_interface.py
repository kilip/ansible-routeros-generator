#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# Copyright (C) 2020 Anthonius Munthi
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Ansible RouterOS Module Generator
#     and manual changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/kilip/routeros-generator
#
# ----------------------------------------------------------------------------

from __future__ import absolute_import, division, print_function
__metaclass__ = type


DOCUMENTATION = """
module: ros_interface
version_added: 1.0.0
author: Anthonius Munthi (@kilip)
short_description: Interface Resource Module
description:
  - This module manages the interface configuration of Mikrotik RouterOS network devices.
supports:
  - export-verbose-mode
integration:
  pre_tasks:
    - name: reset interface configuration
      kilip.routeros.ros_interface:
        state: merged
        config:
          - name: ether2
            comment: ether2 comment
            mtu: 1500
          - name: ether3
            comment: ether3 comment
            mtu: 1500
            disabled: yes
options:
  state:
    choices:
      - merged
    default: merged
    description: Set state for this module
  config:
    type: list
    elements: dict
    suboptions:
      disabled:
        type: bool
        default: False
        description: Set interface disability.
      l2mtu:
        type: str
        description: Layer2 Maximum transmission unit. Note that this property can not be configured on all interfaces. L(Read more&gt;&gt; , https://wiki.mikrotik.com/wiki/Maximum_Transmission_Unit_on_RouterBoards)
      mtu:
        type: str
        description: Layer3 Maximum transmission unit
      name:
        type: str
        required: True
        description: Name of an interface

"""

EXAMPLES = """
# Using Merged
#
# before state:
# [admin@MikroTik] > /interface export 
# /interface
# set comment="ether2 comment" default-name=ether2 mtu=1500
# set comment="ether3 comment" default-name=ether3 disabled=yes mtu=1500
#
- name: Merge configuration with device configuration
  kilip.routeros.ros_interface:
    config:
      - name: ether2
        comment: ether2 updated
        mtu: 2000
      - name: ether3
        comment: ether3 updated
        disabled: no
        mtu: 3000
    state: merged
    
#
# after state:
# [admin@MikroTik] > /interface export 
# # RouterOS Output
# #
# /interface
# add comment="ether2 updated" mtu=2000 name=ether2
# add comment="ether3 updated" disabled=no mtu=3000 name=ether3
#
#
"""

from ansible.module_utils.basic import AnsibleModule
from ..module_utils.resources.interface.interface import InterfaceResource
from ..module_utils.config.config import Config


def main():
    module = AnsibleModule(argument_spec=BridgeResource.argument_spec)
    result = Config(module, BridgeResource).execute_module()
    return module.exit_json(**result)


if __name__ == "__main__":
    main()
