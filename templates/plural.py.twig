from __future__ import absolute_import, division, print_function

__metaclass__ = type

from ..base import ResourceBase

class {{ resource.className }}Resource(ResourceBase):
    resource_name = "{{ resource.resource_name }}"
    command_root = "{{ resource.command_root }}"
    related_resources = []
    gather_network_resources = ["{{ resource.name }}"]
    resource_keys = {{ resource.resource_keys|json_encode|raw }}
    config_type = "plural"
{% if resource.key_prefixes|length > 0 %}
    key_prefixes = {{ resource.key_prefixes|json_encode|raw }}
{% endif %}
    argument_spec = {
        "running_config": {"type": "str"},
        "state": {
            "choices": ["{{ resource.states|join('","')|raw }}"],
{% if resource.default_state is defined  and resource.default_state != ""%}
            "default": "{{ resource.default_state }}",
{% endif %}
            "type": "str"
        },
        "config": {
            "elements": "dict",
            "type": "list",
            "options": {
{% include "options.py.twig" %}
            },
        },
    }