# -*- coding: utf-8 -*-
#
# Copyright (C) 2020 Anthonius Munthi
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Ansible RouterOS Module Generator
#     and manual changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://www.github.com/kilip/ansible-routeros-generator
#
# ----------------------------------------------------------------------------

from __future__ import absolute_import, division, print_function
__metaclass__ = type

from ..base import ResourceBase
{% block custom_import %}{% endblock %}


class {{ resource.className }}(ResourceBase):
    resource_name = "{{ resource.name }}"
    command = "{{ resource.command }}"
    gather_network_resources = ["{{ resource.name }}"]
    keys = {{ resource.module.keys|json_encode|raw }}
    config_type = "{{ resource.type }}"
{% if resource.customProps is not empty %}
    custom_props = {{ resource.customProps|json_encode|raw }}
{% endif %}{% if resource.module.supports is not empty %}
    supports = {{ resource.module.supports|json_encode|raw }}
{% endif %}
    argument_spec = {
        "state": {
            "choices": ["{{ resource.module.states|join('","')|raw }}"],
{% if resource.module.default_state is defined  and resource.module.default_state != ""%}
            "default": "{{ resource.module.default_state }}",
{% endif %}
            "type": "str"
        },
        "config": {
{% if resource.type == "config" %}
            "elements": "dict",
            "type": "list",
{% else %}
            "type": "dict",
{% endif %}
            "options": {
{% include "resource/options.py.twig" %}
            },
        },
    }

{% block custom_attributes %}{% endblock %}

{% block custom_method %}{% endblock %}