from __future__ import absolute_import, division, print_function

__metaclass__ = type

from ..base import ResourceBase


class {{ resource.className }}Resource(ResourceBase):
    """
    Class {{ resource.className }} contains definition for `{{ resource.command_root }}`
    """
    resource_name = "{{ resource.resource_name }}"
    command_root = "{{ resource.command_root }}"
    gather_network_resources = ["{{ resource.resource_name }}"]
    resource_keys = {{ resource.resource_keys|json_encode|raw }}
    config_type = "singular"
    argument_spec = {
        "running_config": {"type": "str"},
        "state": {
            "choices": ["present", "reset"],
            "default": "present",
            "type": "str"
        },
        "config": {
            "type": "dict",
            "options": {
{% include "options.py.twig" %}
            },
        },
    }
