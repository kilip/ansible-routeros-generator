name: CI

on:
  push:
  pull_request:

env:
  COMPOSER_ALLOW_SUPERUSER: '1' # https://getcomposer.org/doc/03-cli.md#composer-allow-superuser
  COMPOSER_INSTALLER_COMMIT: fb22b78362d31c0d2bf516d1f8cdfd2745caa431
  COVERAGE: '0'
  EXT_PCOV_VERSION: '1.0.6'

jobs:
  php-cs-fixer:
    name: PHP-CS-Fixer (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
        --tmpfs /var/tmp:exec
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: false
    timeout-minutes: 5
    env:
      PHP_CS_FIXER_FUTURE_MODE: '1'
      PHP_CS_FIXER_VERSION: '^2.14'
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Cache Composer packages
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: composer-php${{ matrix.php }}-php-cs-fixer-${{ github.sha }}
          restore-keys: |
            composer-php${{ matrix.php }}-php-cs-fixer-
            composer-php${{ matrix.php }}-
            composer-
        continue-on-error: true
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Install PHP-CS-Fixer
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            friendsofphp/php-cs-fixer:"${PHP_CS_FIXER_VERSION}"
      - name: Cache PHP-CS-Fixer results
        uses: actions/cache@v2
        with:
          path: /var/cache/php-cs-fixer
          key: php-cs-fixer-php${{ matrix.php }}-${{ github.sha }}
          restore-keys: |
            php-cs-fixer-php${{ matrix.php }}-
            php-cs-fixer-
        continue-on-error: true
      - name: Run PHP-CS-Fixer fix
        run: |
          export PATH="$PATH:$HOME/.composer/vendor/bin"
          mkdir -p /var/cache/php-cs-fixer
          php-cs-fixer fix --dry-run --diff --cache-file=/var/cache/php-cs-fixer/.php_cs.cache --ansi

  phpstan:
    name: PHPStan (${{ matrix.php }})
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
        --tmpfs /var/tmp:exec
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Cache Composer packages
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: composer-php${{ matrix.php }}-${{ github.sha }}
          restore-keys: |
            composer-php${{ matrix.php }}-
            composer-
        continue-on-error: true
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Update project dependencies
        run: |
          mkdir -p /tmp/kilip/ansible-routeros-generator/vendor
          ln -s /tmp/kilip/ansible-routeros-generator/vendor vendor
          composer update --no-progress --no-suggest --ansi
      - name: Install PHPUnit
        env:
          SYMFONY_PHPUNIT_VERSION: '9.2'
        run: vendor/bin/simple-phpunit --version
      - name: Clear test app cache
        run: |
          mkdir -p /tmp/kilip/ansible-routeros-generator/var
          ln -s /tmp/kilip/ansible-routeros-generator/var tests/Fixtures/app/var
          tests/Fixtures/app/console cache:clear --ansi
      - name: Cache PHPStan results
        uses: actions/cache@v2
        with:
          path: /tmp/phpstan
          key: phpstan-php${{ matrix.php }}-${{ github.sha }}
          restore-keys: |
            phpstan-php${{ matrix.php }}-
            phpstan-
        continue-on-error: true
      - name: Run PHPStan analysis
        run: vendor/bin/phpstan analyse --no-progress --no-interaction --ansi
