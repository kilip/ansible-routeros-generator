name: bridge_port
package: interface.bridge
template: '@ansible/module/module.py.twig'
module_name: kilip.routeros.ros_bridge_port
export_command: '/interface bridge port export'
resource_class_name: BridgePortResource
documentation:
  module: ros_bridge_port
  version_added: 1.0.0
  author: 'Anthonius Munthi (@kilip)'
  short_description: 'Bridge Port Module'
  description:
    - 'This module manages RouterOS sub menu `/interface bridge port`'
  options:
    state:
      choices:
        - merged
        - replaced
        - overridden
        - deleted
      default: merged
      description: 'Set state for this module'
    config:
      type: list
      elements: dict
      suboptions:
        disabled:
          type: bool
          default: 'False'
          description: 'Set bridge port disability'
examples:
  - title: 'Merged Configuration'
    name: 'Merge configuration with device configuration'
    argument_spec:
      config:
        - bridge: br-wan
          interface: ether1
          comment: 'new comment'
        - bridge: br-trunk
          interface: ether2
          comment: 'new comment'
      state: merged
    before: |
      /interface bridge port
      add bridge=br-wan interface=ether1
      add bridge=br-trunk disabled=yes interface=ether2
    after: |
      # RouterOS Output
      #
      /interface bridge port
      add bridge=br-wan comment="new comment" interface=ether1
      add bridge=br-trunk comment="new comment" disabled=no interface=ether2
    commands:
      - '/interface bridge port set [ find bridge=br-wan interface=ether1 ] comment="new comment"'
      - '/interface bridge port set [ find bridge=br-trunk interface=ether2 ] comment="new comment" disabled=no'
  - title: 'Using replaced state'
    name: 'Replace device configuration'
    argument_spec:
      config:
        - bridge: br-wan
          interface: ether1
          comment: 'new comment'
        - bridge: br-trunk
          interface: ether2
          comment: 'new comment'
      state: replaced
    before: |
      /interface bridge port
      add bridge=br-wan interface=ether1
      add bridge=br-trunk disabled=yes interface=ether2
    after: |
      # RouterOS Output
      #
      /interface bridge port
      add bridge=br-wan comment="new comment" interface=ether1
      add bridge=br-trunk comment="new comment" disabled=no interface=ether2
    commands:
      - '/interface bridge port set [ find bridge=br-wan interface=ether1 ] comment="new comment"'
      - '/interface bridge port set [ find bridge=br-trunk interface=ether2 ] comment="new comment" disabled=no'
  - title: 'Using overridden state'
    name: 'Override device configuration'
    argument_spec:
      config:
        - bridge: br-new
          interface: ether2
          comment: 'new comment'
      state: overridden
    before: |
      /interface bridge port
      add bridge=br-wan interface=ether1
      add bridge=br-trunk disabled=yes interface=ether2
    after: |
      # RouterOS Output
      #
      /interface bridge port
      add bridge=br-new comment="new comment" interface=ether2
    commands:
      - '/interface bridge port remove bridge=br-wan interface=ether1'
      - '/interface bridge port remove bridge=br-trunk interface=ether2'
      - '/interface bridge port add bridge=br-new comment="new comment" interface=ether2'
      - '/system script run ansible-remove-invalid'
  - title: 'Using deleted state'
    name: 'Delete bridge port'
    argument_spec:
      config:
        - bridge: br-trunk
          interface: ether2
      state: deleted
    before: |
      /interface bridge port
      add bridge=br-wan interface=ether1
      add bridge=br-trunk disabled=yes interface=ether2
    after: |
      # RouterOS Output
      #
      /interface bridge port
    commands:
      - '/interface bridge port remove bridge=br-trunk interface=ether2'
      - '/system script run ansible-remove-invalid'
resource:
  name: bridge_port
  package: interface.bridge
  command: '/interface bridge port'
  config_type: config
  keys:
    - bridge
    - interface
  argument_spec:
    states:
      type: str
      choices:
        - merged
        - replaced
        - overridden
        - deleted
      default: merged
    config:
      type: list
      elements: dict
      options:
        disabled:
          type: bool
          default: 'False'
        bridge:
          type: str
          required: 'True'
        interface:
          type: str
          required: 'True'
        comment:
          type: str
tests:
  facts:
    name: bridge_port
    fixture_contents: |
      # RouterOS Output
      #
      /interface bridge port
      add bridge=br-wan interface=ether1
      add bridge=br-trunk disabled=yes interface=ether2
    fixtures:
      - action: add
        values:
          bridge: br-wan
          interface: ether1
      - action: add
        values:
          bridge: br-trunk
          disabled: 'yes'
          interface: ether2
  unit:
    module_name: ros_bridge_port
    fixture_contents: |
      # RouterOS Output
      #
      /interface bridge port
      add bridge=br-wan interface=ether1
      add bridge=br-trunk disabled=yes interface=ether2
    tests:
      - commands:
          - '/interface bridge port set [ find bridge=br-wan interface=ether1 ] comment="new comment"'
          - '/interface bridge port set [ find bridge=br-trunk interface=ether2 ] comment="new comment" disabled=no'
        argument_spec:
          config: [{ bridge: br-wan, comment: 'new comment', interface: ether1 }, { bridge: br-trunk, comment: 'new comment', interface: ether2 }]
          state: merged
      - commands:
          - '/interface bridge port set [ find bridge=br-wan interface=ether1 ] comment="new comment"'
          - '/interface bridge port set [ find bridge=br-trunk interface=ether2 ] comment="new comment" disabled=no'
        argument_spec:
          config: [{ bridge: br-wan, comment: 'new comment', interface: ether1 }, { bridge: br-trunk, comment: 'new comment', interface: ether2 }]
          state: replaced
      - commands:
          - '/interface bridge port remove [ find bridge=br-wan interface=ether1 ]'
          - '/interface bridge port remove [ find bridge=br-trunk interface=ether2 ]'
          - '/interface bridge port add bridge=br-new comment="new comment" interface=ether2'
          - '/system script run ansible-remove-invalid'
        argument_spec:
          config: [{ bridge: br-new, comment: 'new comment', interface: ether2 }]
          state: overridden
      - commands:
          - '/interface bridge port remove [ find bridge=br-trunk interface=ether2 ]'
          - '/system script run ansible-remove-invalid'
        argument_spec:
          config: [{ bridge: br-trunk, interface: ether2 }]
          state: deleted
