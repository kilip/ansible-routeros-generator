name: ethernet
package: interface
template: '@ansible/module/module.py.twig'
module_name: kilip.routeros.ros_ethernet
export_command: '/interface ethernet export'
resource_class_name: EthernetResource
documentation:
  module: ros_ethernet
  version_added: 1.0.0
  author: 'Anthonius Munthi (@kilip)'
  short_description: 'Ethernet Resource Module'
  description:
    - 'This module manages the ethernet configuration of Mikrotik RouterOS network devices.'
  options:
    state:
      choices:
        - merged
        - replaced
        - overridden
        - deleted
      default: merged
      description: 'Set state for this module'
    config:
      type: list
      elements: dict
      suboptions:
        advertise:
          type: list
        disabled:
          type: bool
          default: 'False'
          description: 'Set interface disability.'
examples:
  - title: 'Using merged state'
    name: 'Merge configuration with device configuration'
    argument_spec:
      config:
        - name: ether1
          advertise: '10M-full,100M-full,1000M-full'
          comment: 'updated comment'
      state: merged
    before: |
      /interface ethernet
      set comment="ether1 comment" default-name=ether1
    after: |
      # RouterOS Output
      #
      /interface ethernet
      add advertise=10M-full,100M-full,1000M-full comment="updated comment" name=ether1
    commands:
      - '/interface ethernet set [ find name=ether1 ] advertise=10M-full,100M-full,1000M-full comment="updated comment"'
resource:
  name: ethernet
  package: interface
  command: '/interface ethernet'
  config_type: config
  keys:
    - name
  argument_spec:
    states:
      type: str
      choices:
        - merged
        - replaced
        - overridden
        - deleted
      default: merged
    config:
      type: list
      elements: dict
      options:
        advertise:
          type: list
        disabled:
          type: bool
          default: 'False'
        comment:
          type: str
        default_name:
          type: str
        name:
          type: str
          required: 'True'
tests:
  facts:
    name: ethernet
    fixture_contents: |
      # RouterOS Output
      #
      /interface ethernet
      add comment="ether1 comment" default-name=ether1
    fixtures:
      - action: set
        values:
          comment: 'ether1 comment'
          default_name: ether1
  unit:
    module_name: ros_ethernet
    fixture_contents: |
      # RouterOS Output
      #
      /interface ethernet
      add comment="ether1 comment" default-name=ether1
    tests:
      - commands:
          - '/interface ethernet set [ find name=ether1 ] advertise=10M-full,100M-full,1000M-full comment="updated comment"'
        argument_spec:
          config: [{ advertise: '10M-full,100M-full,1000M-full', comment: 'updated comment', name: ether1 }]
          state: merged
