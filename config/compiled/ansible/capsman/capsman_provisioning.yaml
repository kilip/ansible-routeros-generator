name: capsman_provisioning
package: capsman
template: '@ansible/module/module.py.twig'
module_name: kilip.routeros.ros_capsman_provisioning
export_command: '/caps-man provisioning export'
resource_class_name: CapsmanProvisioningResource
documentation:
  module: ros_capsman_provisioning
  version_added: 1.0.0
  author: 'Anthonius Munthi (@kilip)'
  short_description: 'CAPsMan Provisioning Module'
  description:
    - 'This modules manages CAPsMan Provisioning on Mikrotik RouterOS network devices'
  options:
    state:
      choices:
        - merged
        - replaced
        - overridden
        - deleted
      default: merged
      description: 'Set state for this module'
    config:
      type: list
      elements: dict
      suboptions:
        action:
          type: str
          choices:
            - create-disabled
            - create-dynamic-enabled
            - create-enabled
            - none
          description: |
            Action to take if rule matches are specified by the following settings:
            
            - **create-disabled** - create disabled static interfaces for radio. I.e., the interfaces will be bound to the radio, but the radio will not be operational until the interface is manually enabled;
            - **create-enabled** - create enabled static interfaces. I.e., the interfaces will be bound to the radio and the radio will be operational;
            - **create-dynamic-enabled** - create enabled dynamic interfaces. I.e., the interfaces will be bound to the radio, and the radio will be operational;
            - **none** - do nothing, leaves radio in non-provisioned state;
            
        comment:
          type: str
          required: 'True'
          description: 'Short description of the Provisioning rule'
        common_name_regexp:
          type: str
          description: 'Regular expression to match radios by common name. Each CAP''s common name identifier can be found under "/caps-man radio" as value "REMOTE-CAP-NAME"'
        hw_supported_modes:
          type: str
          choices:
            - a
            - a-turbo
            - ac
            - an
            - b
            - g
            - g-turbo
            - gn
          description: 'Match radios by supported wireless modes'
        identity_regexp:
          type: str
          description: 'Regular expression to match radios by router identity'
        ip_address_ranges:
          type: str
          description: 'Match CAPs with IPs within configured address range.'
        master_configuration:
          type: str
          description: 'If **action** specifies to create interfaces, then a new master interface with its configuration set to this configuration profile will be created'
        name_format:
          type: str
          choices:
            - cap
            - identity
            - prefix
            - prefix-identity
          default: cap
          description: |
            specify the syntax of the CAP interface name creation
            
            - cap - default name
            - identity - CAP boards system identity name
            - prefix - name from the name-prefix value
            - prefix-identity - name from the name-prefix value and the CAP boards system identity name
            
        name_prefix:
          type: str
          description: 'name prefix which can be used in the name-format for creating the CAP interface names'
        radio_mac:
          type: str
          default: '00:00:00:00:00:00'
          description: 'MAC address of radio to be matched, empty MAC (00:00:00:00:00:00) means match all MAC addresses'
        slave_configurations:
          type: list
          description: 'If **action** specifies to create interfaces, then a new slave interface for each configuration profile in this list is created.'
examples:
  - title: 'Using merged state'
    name: 'Merge with device configuration'
    argument_spec:
      state: merged
      config:
        - comment: test
          action: create-disabled
        - comment: 'Olympus Wireless Network'
          identity_regexp: olympus
          master_configuration: olympus
          name_format: identity
          slave_configurations:
            - troy-network
            - gaia-network
          action: create-enabled
    before: |
      /caps-man provisioning
      add comment=test
    after: |
      # RouterOS Output
      #
      /caps-man provisioning
      add action=create-disabled comment=test
      add action=create-enabled comment="Olympus Wireless Network" identity-regexp=olympus master-configuration=olympus-network name-format=identity slave-configurations=troy-network,gaia-network
    commands:
      - '/caps-man provisioning set [ find comment=test ] action=create-disabled'
      - '/caps-man provisioning add action=create-enabled comment="Olympus Wireless Network" identity-regexp=olympus master-configuration=olympus-network name-format=identity slave-configurations=troy-network,gaia-network'
  - title: 'Using deleted state'
    name: 'Delete provisioning config'
    argument_spec:
      state: deleted
      config:
        - comment: test
    before: |
      /caps-man provisioning
      add comment=test
    after: |
      # RouterOS Output
      #
      /caps-man provisioning
    commands:
      - '/caps-man provisioning remove comment=test'
      - '/system script run ansible-remove-invalid'
resource:
  name: capsman_provisioning
  package: capsman
  command: '/caps-man provisioning'
  config_type: config
  keys:
    - comment
  argument_spec:
    states:
      type: str
      choices:
        - merged
        - replaced
        - overridden
        - deleted
      default: merged
    config:
      type: list
      elements: dict
      options:
        action:
          type: str
          choices:
            - create-disabled
            - create-dynamic-enabled
            - create-enabled
            - none
        comment:
          type: str
          required: 'True'
        common_name_regexp:
          type: str
        hw_supported_modes:
          type: str
          choices:
            - a
            - a-turbo
            - ac
            - an
            - b
            - g
            - g-turbo
            - gn
        identity_regexp:
          type: str
        ip_address_ranges:
          type: str
        master_configuration:
          type: str
        name_format:
          type: str
          choices:
            - cap
            - identity
            - prefix
            - prefix-identity
          default: cap
        name_prefix:
          type: str
        radio_mac:
          type: str
          default: '00:00:00:00:00:00'
        slave_configurations:
          type: list
tests:
  facts:
    name: capsman_provisioning
    fixture_contents: |
      # RouterOS Output
      #
      /caps-man provisioning
      add comment=test
    fixtures:
      - action: add
        values:
          comment: test
  unit:
    module_name: ros_capsman_provisioning
    fixture_contents: |
      # RouterOS Output
      #
      /caps-man provisioning
      add comment=test
    tests:
      - commands:
          - '/caps-man provisioning set [ find comment=test ] action=create-disabled'
          - '/caps-man provisioning add action=create-enabled comment="Olympus Wireless Network" identity-regexp=olympus master-configuration=olympus-network name-format=identity slave-configurations=troy-network,gaia-network'
        argument_spec:
          state: merged
          config:
            - { action: create-disabled, comment: test }
            - { action: create-enabled, comment: 'Olympus Wireless Network', identity_regexp: olympus, master_configuration: olympus, name_format: identity, slave_configurations: [troy-network, gaia-network] }
      - commands:
          - '/caps-man provisioning remove [ find comment=test ]'
          - '/system script run ansible-remove-invalid'
        argument_spec:
          state: deleted
          config:
            - { comment: test }
