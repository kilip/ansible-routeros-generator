name: capsman_datapath
package: capsman
template: '@ansible/module/module.py.twig'
module_name: kilip.routeros.ros_capsman_datapath
export_command: '/caps-man datapath export'
resource_class_name: CapsmanDatapathResource
documentation:
  module: ros_capsman_datapath
  version_added: 1.0.0
  author: 'Anthonius Munthi (@kilip)'
  short_description: 'CAPsMan DataPath Configuration Module'
  description:
    - 'This modules manages CAPsMan DataPath Configuration on Mikrotik RouterOS network devices'
  options:
    state:
      choices:
        - merged
        - replaced
        - overridden
        - deleted
      default: merged
      description: 'Set state for this module'
    config:
      type: list
      elements: dict
      suboptions:
        arp:
          type: str
          choices: [disabled, enabled, proxy-arp, reply-only]
          default: enabled
          description: |
            Address Resolution Protocol setting
            - `disabled` - the interface will not use ARP
            - `enabled` - the interface will use ARP
            - `proxy-arp` - the interface will use the ARP proxy feature
            - `reply-only` - the interface will only reply to requests originated from matching IP address/MAC address combinations which are entered as static entries in the L(IP/ARP,https://wiki.mikrotik.com/wiki/Manual:IP/ARP) table. Therefore for communications to be successful, a valid static entry must already exist.
            
        bridge:
          type: str
          description: |
            Bridge to which particular interface should be automatically added as port. Required only when local-forwarding is not used.
            
        bridge_cost:
          type: int
          description: |
            bridge port cost to use when adding as bridge port
            
        bridge_horizon:
          type: int
          description: |
            bridge horizon to use when adding as bridge port
            
        client_to_client_forwarding:
          type: bool
          default: 'False'
          description: |
            controls if client-to-client forwarding between wireless clients connected to interface should be allowed, in local forwarding mode this function is performed by CAP, otherwise it is performed by CAPsMAN
            
        comment:
          type: str
          description: 'Short description of the datapath'
        interface_list:
          type: list
          description: 'interface list for this datapath'
        l2mtu:
          type: str
          description: 'set Layer2 MTU size'
        local_forwarding:
          type: bool
          default: 'False'
          description: |
            Controls forwarding mode. If disabled, all L2 and L3 data will be forwarded to CAPsMAN, and further forwarding decisions will be made only then.
            Note, if disabled, make sure that each CAP interface MAC Address that participates in the same broadcast domain is unique (including local MACs, like Bridge-MAC).
            
        mtu:
          type: str
          description: 'set MTU size'
        name:
          type: str
          required: 'True'
          description: 'Name for datapath'
        openflow_switch:
          type: str
          description: |
            OpenFlow switch port (when enabled) to add interface to
            
        vlan_id:
          type: int
          description: |
            VLAN ID to assign to interface if vlan-mode enables use of VLAN tagging
            
        vlan_mode:
          type: str
          choices: [use-service-tag, use-tag]
          description: |
            Enables and specifies the type of VLAN tag to be assigned to the interface (causes all received data to get tagged with VLAN tag and allows the interface to only send out data tagged with given tag)
            
examples:
  - title: 'Using Merged'
    name: 'Merge with device configuration'
    argument_spec:
      state: merged
      config:
        - name: test
          bridge: br-trunk
          arp: reply-only
        - name: new
          bridge: br-trunk
          arp: reply-only
    before: |
      /caps-man datapath
      add name=test
    after: |
      # 2020-09-16
      #
      /caps-man datapath
      add arp=reply-only bridge=br-trunk name=test
      add arp=reply-only bridge=br-trunk name=new
    commands:
      - '/caps-man datapath set [ find name=test ] arp=reply-only bridge=br-trunk'
      - '/caps-man datapath add arp=reply-only bridge=br-trunk name=new'
resource:
  name: capsman_datapath
  package: capsman
  command: '/caps-man datapath'
  config_type: config
  keys:
    - name
  argument_spec:
    states:
      type: str
      choices:
        - merged
        - replaced
        - overridden
        - deleted
      default: merged
    config:
      type: list
      elements: dict
      options:
        arp:
          type: str
          choices: [disabled, enabled, proxy-arp, reply-only]
          default: enabled
        bridge:
          type: str
        bridge_cost:
          type: int
        bridge_horizon:
          type: int
        client_to_client_forwarding:
          type: bool
          default: 'False'
        comment:
          type: str
        interface_list:
          type: list
        l2mtu:
          type: str
        local_forwarding:
          type: bool
          default: 'False'
        mtu:
          type: str
        name:
          type: str
          required: 'True'
        openflow_switch:
          type: str
        vlan_id:
          type: int
        vlan_mode:
          type: str
          choices: [use-service-tag, use-tag]
tests:
  facts:
    name: capsman_datapath
    fixture_contents: |
      # 2020-09-16
      #
      /caps-man datapath
      add name=test
    fixtures:
      - action: add
        values:
          name: test
  unit:
    module_name: ros_capsman_datapath
    fixture_contents: |
      # 2020-09-16
      #
      /caps-man datapath
      add name=test
    tests:
      - commands:
          - '/caps-man datapath set [ find name=test ] arp=reply-only bridge=br-trunk'
          - '/caps-man datapath add arp=reply-only bridge=br-trunk name=new'
        argument_spec:
          state: merged
          config: [{ arp: reply-only, bridge: br-trunk, name: test }, { arp: reply-only, bridge: br-trunk, name: new }]
