name: capsman_channel
package: capsman
template: '@ansible/module/module.py.twig'
module_name: kilip.routeros.ros_capsman_channel
export_command: '/caps-man channel export'
resource_class_name: CapsmanChannelResource
documentation:
  module: ros_capsman_channel
  version_added: 1.0.0
  author: 'Anthonius Munthi (@kilip)'
  short_description: 'CAPsMan Channels Configuration Module'
  description:
    - 'This modules manages CAPsMan Channels configuration on Mikrotik RouterOS network devices'
  options:
    state:
      choices:
        - merged
        - replaced
        - overridden
        - deleted
      default: merged
      description: 'Set state for this module'
    config:
      type: list
      elements: dict
      suboptions:
        save_selected:
          type: bool
        width:
          type: str
examples:
  - title: 'Using merged'
    name: 'Merge with device configuration'
    argument_spec:
      config:
        - name: test
          save_selected: 'no'
        - name: new
          extension_channel: Ce
      state: merged
    before: |
      /caps-man channel
      add name=test
    after: |
      # RouterOS Output
      #
      /caps-man channel
      add name=test save-selected=no
      add extension-channel=Ce name=new
    commands:
      - '/caps-man channel set [ find name=test ] save-selected=no'
      - '/caps-man channel add extension-channel=Ce name=new'
resource:
  name: capsman_channel
  package: capsman
  command: '/caps-man channel'
  config_type: config
  keys:
    - name
  argument_spec:
    states:
      type: str
      choices:
        - merged
        - replaced
        - overridden
        - deleted
      default: merged
    config:
      type: list
      elements: dict
      options:
        save_selected:
          type: bool
        width:
          type: str
        name:
          type: str
          required: 'True'
        extension_channel:
          type: str
tests:
  facts:
    name: capsman_channel
    fixture_contents: |
      # RouterOS Output
      #
      /caps-man channel
      add name=test
    fixtures:
      - action: add
        values:
          name: test
  unit:
    module_name: ros_capsman_channel
    fixture_contents: |
      # RouterOS Output
      #
      /caps-man channel
      add name=test
    tests:
      - commands:
          - '/caps-man channel set [ find name=test ] save-selected=no'
          - '/caps-man channel add extension-channel=Ce name=new'
        argument_spec:
          config: [{ name: test, save_selected: 'no' }, { extension_channel: Ce, name: new }]
          state: merged
