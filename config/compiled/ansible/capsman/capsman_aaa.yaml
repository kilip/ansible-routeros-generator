name: capsman_aaa
package: capsman
template: '@ansible/module/module.py.twig'
module_name: kilip.routeros.ros_capsman_aaa
export_command: '/caps-man aaa export'
resource_class_name: CapsmanAaaResource
documentation:
  module: ros_capsman_aaa
  version_added: 1.0.0
  author: 'Anthonius Munthi (@kilip)'
  short_description: 'CAPsMan AAA Configuration Module'
  description:
    - 'This modules manages CAPsMan AAA configuration on Mikrotik RouterOS network devices'
  supports:
    - export-verbose-mode
  options:
    state:
      choices:
        - present
        - reset
      default: present
      description: 'Set state for this module'
    config:
      type: dict
      suboptions:
        called_format:
          type: str
          choices:
            - mac
            - 'mac:ssid'
            - ssid
          default: 'mac:ssid'
          description: 'Format of how the "called-id" identifier will be passed to RADIUS. When configuring radius server clients, you can specify "called-id" in order to separate multiple entires.'
        comment:
          type: str
          description: 'Short note for capsman_aaa resource'
        disabled:
          type: bool
          default: 'False'
          description: 'Set capsman_aaa resource disability'
        interim_update:
          type: str
          default: disabled
          description: 'When RADIUS accounting is used, Access Point periodically sends accounting information updates to the RADIUS server. This property specifies default update interval that can be overridden by the RADIUS server using the [ Acct-Interim-Interval](https://wiki.mikrotik.com/wiki/Manual:Interface/Wireless#RADIUS_MAC_authentication "Manual:Interface/Wireless") attribute.'
        mac_caching:
          type: str
          default: disabled
          description: 'If this value is set to time interval, the Access Point will cache RADIUS MAC authentication responses for specified time, and will not contact RADIUS server if matching cache entry already exists. Value disabled will disable cache, Access Point will always contact RADIUS server.'
        mac_format:
          type: str
          default: 'XX:XX:XX:XX:XX:XX'
          description: 'Controls how MAC address of the client is encoded by Access Point in the User-Name attribute of the MAC authentication and MAC accounting RADIUS requests.'
        mac_mode:
          type: str
          choices:
            - as-username
            - as-username-and-password
          description: 'By default Access Point uses an empty password, when sending Access-Request during MAC authentication. When this property is set to as-username-and-password, Access Point will use the same value for User-Password attribute as for the User-Name attribute.'
examples:
  - title: 'Using present state'
    name: 'Change configuration'
    argument_spec:
      config:
        called_format: mac
        interim_update: 10s
        mac_caching: 10m
        mac_format: XX-XX-XX-XX-XX-XX
        mac_mode: as-username-and-password
      state: present
    before: |
      /caps-man aaa
      set called-format=mac:ssid interim-update=disabled mac-caching=disabled mac-format=XX.XX.XX.XX.XX.XX mac-mode=as-username
    after: |
      # RouterOS Output
      #
      /caps-man aaa
      set called-format=mac interim-update=10s mac-caching=10m mac-format=XX-XX-XX-XX-XX-XX mac-mode=as-username-and-password
    commands:
      - '/caps-man aaa set called-format=mac interim-update=10s mac-caching=10m mac-format=XX-XX-XX-XX-XX-XX mac-mode=as-username-and-password'
  - title: 'Using reset state'
    name: 'Reset to default value'
    argument_spec:
      state: reset
    before: |
      /caps-man aaa
      set called-format=mac:ssid interim-update=disabled mac-caching=disabled mac-format=XX.XX.XX.XX.XX.XX mac-mode=as-username
    after: |
      # RouterOS Output
      #
      /caps-man aaa
      set mac-format=XX:XX:XX:XX:XX:XX
    commands:
      - '/caps-man aaa set mac-format=XX:XX:XX:XX:XX:XX'
resource:
  name: capsman_aaa
  package: capsman
  command: '/caps-man aaa'
  config_type: setting
  keys:
    - name
  supports:
    - export-verbose-mode
  argument_spec:
    states:
      type: str
      choices:
        - present
        - reset
      default: present
    config:
      type: dict
      options:
        called_format:
          type: str
          choices:
            - mac
            - 'mac:ssid'
            - ssid
          default: 'mac:ssid'
        comment:
          type: str
        disabled:
          type: bool
          default: 'False'
        interim_update:
          type: str
          default: disabled
        mac_caching:
          type: str
          default: disabled
        mac_format:
          type: str
          default: 'XX:XX:XX:XX:XX:XX'
        mac_mode:
          type: str
          choices:
            - as-username
            - as-username-and-password
tests:
  facts:
    name: capsman_aaa
    fixture_contents: |
      # RouterOS Output
      #
      /caps-man aaa
      set called-format=mac:ssid interim-update=disabled mac-caching=disabled mac-format=XX.XX.XX.XX.XX.XX mac-mode=as-username
    fixtures:
      - action: set
        values:
          called_format: 'mac:ssid'
          interim_update: disabled
          mac_caching: disabled
          mac_format: XX.XX.XX.XX.XX.XX
          mac_mode: as-username
  unit:
    module_name: ros_capsman_aaa
    fixture_contents: |
      # RouterOS Output
      #
      /caps-man aaa
      set called-format=mac:ssid interim-update=disabled mac-caching=disabled mac-format=XX.XX.XX.XX.XX.XX mac-mode=as-username
    tests:
      - commands:
          - '/caps-man aaa set called-format=mac interim-update=10s mac-caching=10m mac-format=XX-XX-XX-XX-XX-XX mac-mode=as-username-and-password'
        argument_spec:
          config:
            called_format: mac
            interim_update: 10s
            mac_caching: 10m
            mac_format: XX-XX-XX-XX-XX-XX
            mac_mode: as-username-and-password
          state: present
      - commands:
          - '/caps-man aaa set mac-format=XX:XX:XX:XX:XX:XX'
        argument_spec:
          state: reset
