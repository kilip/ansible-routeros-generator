name: capsman_configuration
package: capsman
template: '@ansible/module/module.py.twig'
module_name: kilip.routeros.ros_capsman_configuration
export_command: '/caps-man configuration export'
resource_class_name: CapsmanConfigurationResource
documentation:
  module: ros_capsman_configuration
  version_added: 1.0.0
  author: 'Anthonius Munthi (@kilip)'
  short_description: 'CAPsMan Configuration Module'
  description:
    - 'This modules manages CAPsMan Configuration on Mikrotik RouterOS network devices'
  supports:
    - reset_value
  options:
    state:
      choices:
        - merged
        - replaced
        - overridden
        - deleted
      default: merged
      description: 'Set state for this module'
    config:
      type: list
      elements: dict
      suboptions:
        channel:
          type: str
          description: 'User defined list taken from Channel names (**/caps-man channels**)'
        channel_band:
          type: str
          choices:
            - 2ghz-b
            - 2ghz-b/g
            - 2ghz-b/g/n
            - 2ghz-onlyg
            - 2ghz-onlyn
            - 5ghz-a
            - 5ghz-a/n
            - 5ghz-a/n/ac
            - 5ghz-only-ac
            - 5ghz-onlyn
          description: 'Defines set of used channels.'
        channel_control_channel_width:
          type: str
          choices:
            - 10mhz
            - 20mhz
            - 40mhz-turbo
            - 5mhz
          description: 'Defines set of used channel widths.'
        channel_extension_channel:
          type: str
          choices:
            - Ce
            - Ceee
            - disabled
            - eC
            - eCee
            - eeCe
            - eeeC
            - xx
            - xxxx
          description: 'Extension channel configuration. (E.g. Ce = extension channel is above Control channel, eC = extension channel is below Control channel)'
        channel_frequency:
          type: int
          description: 'Channel frequency value in MHz on which AP will operate. If left blank, CAPsMAN will automatically determine the best frequency that is least occupied.'
        channel_reselect_interval:
          type: str
          description: 'Interval after which least occupied frequency is chosen. Works only if **channel.frequency** is left blank.'
        channel_save_selected:
          type: bool
          default: 'False'
          description: 'If channel frequency is chosen automatically and **channel.reselect-interval** is used, then saves the last picked frequency.'
        channel_secondary_frequency:
          type: int
          default: 0
          description: 'Specifies the second frequency that will be used for 80+80MHz configuration. Set it to **Disabled** in order to disable 80+80MHz capability.'
        channel_skip_dfs_channels:
          type: bool
          default: 'False'
          description: 'If **channel.frequency** is left blank, the selection will skip DFS channels'
        channel_tx_power:
          type: int
          description: 'TX Power for CAP interface (for the whole interface not for individual chains) in dBm. It is not possible to set higher than allowed by country regulations or interface. By default max allowed by country or interface is used.'
        channel_width:
          type: str
          description: 'Sets Channel Width in MHz.'
        comment:
          type: str
          description: 'Short description of the Configuration profile'
        country:
          type: str
          default: no_country_set
          description: 'Limits available bands, frequencies and maximum transmit power for each frequency. Also specifies default value of **scan-list**. Value *no\_country\_set* is an FCC compliant set of channels.'
        datapath:
          type: str
          description: 'User defined list taken from Datapath names (**/caps-man datapath**)'
        datapath_bridge:
          type: str
          description: 'Bridge to which particular interface should be automatically added as port. Required only when local-forwarding is not used.'
        datapath_bridge_cost:
          type: int
          description: 'bridge port cost to use when adding as bridge port'
        datapath_bridge_horizon:
          type: int
          description: 'bridge horizon to use when adding as bridge port'
        datapath_client_to_client_forwarding:
          type: bool
          default: 'False'
          description: 'controls if client-to-client forwarding between wireless clients connected to interface should be allowed, in local forwarding mode this function is performed by CAP, otherwise it is performed by CAPsMAN'
        datapath_interface_list:
          type: str
          description: ''
        datapath_l2mtu:
          type: str
          description: 'set Layer2 MTU size'
        datapath_local_forwarding:
          type: bool
          default: 'False'
          description: |
            Controls forwarding mode. If disabled, all L2 and L3 data will be forwarded to CAPsMAN, and further forwarding decisions will be made only then.   
            **Note**, if disabled, make sure that each CAP interface MAC Address that participates in the same broadcast domain is unique (including local MAC's, like Bridge-MAC).
            
        datapath_mtu:
          type: str
          description: 'set MTU size'
        datapath_openflow_switch:
          type: str
          description: 'OpenFlow switch port (when enabled) to add interface to'
        datapath_vlan_id:
          type: int
          description: 'VLAN ID to assign to interface if vlan-mode enables use of VLAN tagging'
        datapath_vlan_mode:
          type: str
          choices:
            - use-service-tag
            - use-tag
          description: 'Enables and specifies the type of VLAN tag to be assigned to the interface (causes all received data to get tagged with VLAN tag and allows the interface to only send out data tagged with given tag)'
        disabled:
          type: bool
          default: 'False'
          description: 'Set capsman_configuration resource disability'
        disconnect_timeout:
          type: str
          description: ''
        distance:
          type: str
          description: ''
        frame_lifetime:
          type: str
          description: ''
        guard_interval:
          type: str
          choices:
            - any
            - long
          default: any
          description: 'Whether to allow the use of short guard interval (refer to 802.11n MCS specification to see how this may affect throughput). "any" will use either short or long, depending on data rate, "long" will use long only.'
        hide_ssid:
          type: bool
          description: |2
             - *yes* - AP does not include SSID in the beacon frames and does not reply to probe requests that have broadcast SSID.
            - *no* - AP includes SSID in the beacon frames and replies to probe requests that have broadcast SSID.
            
            This property has effect only in AP mode. Setting it to *yes* can remove this network from the list of wireless networks that are shown by some client software. Changing this setting does not improve the security of the wireless network, because SSID is included in other frames sent by the AP.
            
        hw_protection_mode:
          type: str
          description: ''
        hw_retries:
          type: str
          description: ''
        installation:
          type: str
          choices:
            - any
            - indoor
            - outdoor
          default: any
          description: ''
        keepalive_frames:
          type: str
          choices:
            - disabled
            - enabled
          default: enabled
          description: ''
        load_balancing_group:
          type: str
          description: 'Tags the interface to the load balancing group. For a client to connect to interface in this group, the interface should have the same number of already connected clients as all other interfaces in the group or smaller. Useful in setups where ranges of CAPs mostly overlap.'
        max_sta_count:
          type: int
          description: 'Maximum number of associated clients.'
        mode:
          type: str
          default: ap
          description: 'Set operational mode. Only ap currently supported.'
        multicast_helper:
          type: str
          choices:
            - default
            - disabled
            - full
          default: default
          description: |
            When set to full multicast packets will be sent with unicast destination MAC address, resolving [ multicast problem](https://wiki.mikrotik.com/wiki/Manual:Multicast_detailed_example#Multicast_and_Wireless "Manual:Multicast detailed example") on a wireless link. This option should be enabled only on the access point, clients should be configured in **station-bridge** mode. Available starting from v5.15.
            
            - disabled - disables the helper and sends multicast packets with multicast destination MAC addresses
            - full - all multicast packet mac address are changed to unicast mac addresses prior sending them out
            - default - default choice that currently is set to *disabled*. Value can be changed in future releases.
            
        name:
          type: str
          required: 'True'
          description: 'Descriptive name for the Configuration Profile'
        rates:
          type: str
          description: 'User defined list taken from Rates names (**/caps-man rates**)'
        rates_basic:
          type: str
          choices:
            - 11Mbps
            - 11Mbps
            - 12Mbps
            - 18Mbps
            - 1Mbps
            - 24Mbps
            - 2Mbps
            - 36Mbps
            - 48Mbps
            - 5.5Mbps
            - 54Mbps
            - 6Mbps
          description: ''
        rates_ht_basic_mcs:
          type: list
          choices:
            - mcs-0
            - mcs-1
            - mcs-10
            - mcs-11
            - mcs-12
            - mcs-13
            - mcs-14
            - mcs-15
            - mcs-16
            - mcs-17
            - mcs-18
            - mcs-19
            - mcs-2
            - mcs-20
            - mcs-21
            - mcs-22
            - mcs-23
            - mcs-3
            - mcs-4
            - mcs-5
            - mcs-6
            - mcs-7
            - mcs-8
            - mcs-9
          default:
            - mcs-0
            - mcs-1
            - mcs-2
            - mcs-3
            - mcs-4
            - mcs-5
            - mcs-6
            - mcs-7
          description: '[Modulation and Coding Schemes](http://en.wikipedia.orghttps://wiki.mikrotik.com/wiki/IEEE_802.11n-2009#Data_rates) that every connecting client must support. Refer to 802.11n for MCS specification.'
        rates_ht_supported_mcs:
          type: list
          choices:
            - mcs-0
            - mcs-1
            - mcs-10
            - mcs-11
            - mcs-12
            - mcs-13
            - mcs-14
            - mcs-15
            - mcs-16
            - mcs-17
            - mcs-18
            - mcs-19
            - mcs-2
            - mcs-20
            - mcs-21
            - mcs-22
            - mcs-23
            - mcs-3
            - mcs-4
            - mcs-5
            - mcs-6
            - mcs-7
            - mcs-8
            - mcs-9
          default:
            - mcs-0
            - mcs-1
            - mcs-2
            - mcs-3
            - mcs-4
            - mcs-5
            - mcs-6
            - mcs-7
            - mcs-8
            - mcs-9
            - mcs-10
            - mcs-11
            - mcs-12
            - mcs-13
            - mcs-14
            - mcs-15
            - mcs-16
            - mcs-17
            - mcs-18
            - mcs-19
            - mcs-20
            - mcs-21
            - mcs-22
            - mcs-23
          description: '[Modulation and Coding Schemes](http://en.wikipedia.orghttps://wiki.mikrotik.com/wiki/IEEE_802.11n-2009#Data_rates) that this device advertises as supported. Refer to 802.11n for MCS specification.'
        rates_supported:
          type: str
          choices:
            - 11Mbps
            - 11Mbps
            - 12Mbps
            - 18Mbps
            - 1Mbps
            - 24Mbps
            - 2Mbps
            - 36Mbps
            - 48Mbps
            - 5.5Mbps
            - 54Mbps
            - 6Mbps
          description: ''
        rates_vht_basic_mcs:
          type: str
          choices:
            - 'MCS 0-7'
            - 'MCS 0-8'
            - 'MCS 0-9'
            - none
          description: |
            [Modulation and Coding Schemes](http://en.wikipedia.orghttps://wiki.mikrotik.com/wiki/IEEE_802.11ac#Data_rates_and_speed) that every connecting client must support. Refer to 802.11ac for MCS specification. You can set MCS interval for each of Spatial Stream
            
            - *none* - will not use selected Spatial Stream
            - *MCS 0-7* - client must support MCS-0 to MCS-7
            - *MCS 0-8* - client must support MCS-0 to MCS-8
            - *MCS 0-9* - client must support MCS-0 to MCS-9
            
        rates_vht_supported_mcs:
          type: str
          choices:
            - 'MCS 0-7'
            - 'MCS 0-8'
            - 'MCS 0-9'
            - none
          description: |
            [Modulation and Coding Schemes](http://en.wikipedia.orghttps://wiki.mikrotik.com/wiki/IEEE_802.11ac#Data_rates_and_speed) that this device advertises as supported. Refer to 802.11ac for MCS specification. You can set MCS interval for each of Spatial Stream
            
            - *none* - will not use selected Spatial Stream
            - *MCS 0-7* - devices will advertise as supported MCS-0 to MCS-7
            - *MCS 0-8* - devices will advertise as supported MCS-0 to MCS-8
            - *MCS 0-9* - devices will advertise as supported MCS-0 to MCS-9
            
        rx_chains:
          type: list
          choices:
            - 0
            - 1
            - 2
            - 3
          default: 'a:1:{i:0;i:0;}'
          description: 'Which antennas to use for receive.'
        security:
          type: str
          description: 'Name of security configuration from **/caps-man security**'
        security_authentication_types:
          type: list
          choices:
            - wpa-psk
            - wpa2-psk
            - wpa-eap
            - wpa2-eap
          description: 'Specify the type of Authentication from **wpa-psk**, **wpa2-psk**, **wpa-eap** or **wpa2-eap**'
        security_disable_pmkid:
          type: str
          description: ''
        security_eap_methods:
          type: str
          choices:
            - eap-tls
            - passthrough
          description: |2
             - eap-tls - Use built-in EAP TLS authentication.
            - passthrough - Access point will relay authentication process to the RADIUS server.
            
        security_eap_radius_accounting:
          type: str
          description: 'specifies if RADIUS traffic accounting should be used if RADIUS authentication gets done for this client'
        security_encryption:
          type: list
          choices:
            - aes-ccm
            - tkip
          description: 'Set type of unicast encryption algorithm used'
        security_group_encryption:
          type: str
          choices:
            - aes-ccm
            - tkip
          default: aes-ccm
          description: |
            Access Point advertises one of these ciphers, multiple values can be selected. Access Point uses it to encrypt all broadcast and multicast frames. Client attempts connection only to Access Points that use one of the specified group ciphers.
            
            - <var>tkip</var> - Temporal Key Integrity Protocol - encryption protocol, compatible with legacy WEP equipment, but enhanced to correct some of the WEP flaws.
            - <var>aes-ccm</var> - more secure WPA encryption protocol, based on the reliable AES (Advanced Encryption Standard). Networks free of WEP legacy should use only this cipher.
            
        security_group_key_update:
          type: str
          default: 5m
          description: 'Controls how often Access Point updates the group key. This key is used to encrypt all broadcast and multicast frames. property only has effect for Access Points.'
        security_passphrase:
          type: str
          description: 'WPA or WPA2 pre-shared key'
        security_tls_certificate:
          type: str
          choices:
            - name
            - none
          description: 'Access Point always needs a certificate when **security.tls-mode** is set to value other than **no-certificates**.'
        security_tls_mode:
          type: str
          choices:
            - dont-verify-certificate
            - no-certificates
            - verify-certificate
            - verify-certificate-with-crl
          description: |
            This property has effect only when **security.eap-methods** contains *eap-tls*.
            
            - <var>verify-certificate</var> - Require remote device to have valid certificate. Check that it is signed by known certificate authority. No additional identity verification is done. Certificate may include information about time period during which it is valid. If router has incorrect time and date, it may reject valid certificate because router's clock is outside that period. See also the [ Certificates](https://wiki.mikrotik.com/wiki/Manual:System/Certificates "Manual:System/Certificates") configuration.
            - <var>dont-verify-certificate</var> - Do not check certificate of the remote device. Access Point will not require client to provide certificate.
            - <var>no-certificates</var> - Do not use certificates. TLS session is established using 2048 bit anonymous Diffie-Hellman key exchange.
            - <var>verify-certificate-with-crl</var> - Same as verify-certificate but also checks if the certificate is valid by checking the Certificate Revocation List.
            
        ssid:
          type: str
          description: 'SSID (service set identifier) is a name broadcast in the beacons that identifies wireless network.'
        tx_chains:
          type: list
          choices:
            - 0
            - 1
            - 2
            - 3
          default: 'a:1:{i:0;i:0;}'
          description: 'Which antennas to use for transmit.'
examples:
  - title: 'Using merged'
    name: 'Merge configuration with devie configuration'
    argument_spec:
      state: merged
      config:
        - name: test
          datapath_bridge: br-trunk
          rx_chains:
            - 0
            - 1
            - 2
        - name: new
          datapath_bridge: br-trunk
    before: |
      /caps-man configuration
      add name=test
    after: |
      # RouterOS Output
      #
      /caps-man configuration
      add datapath.bridge=br-trunk name=test rx-chains=0,1,2
      add datapath.bridge=br-trunk name=new
    commands:
      - '/caps-man configuration set [ find name=test ] datapath.bridge=br-trunk rx-chains=0,1,2'
      - '/caps-man configuration add datapath.bridge=br-trunk name=new'
resource:
  name: capsman_configuration
  package: capsman
  command: '/caps-man configuration'
  config_type: config
  keys:
    - name
  supports:
    - reset_value
  argument_spec:
    states:
      type: str
      choices:
        - merged
        - replaced
        - overridden
        - deleted
      default: merged
    config:
      type: list
      elements: dict
      options:
        channel:
          type: str
        channel_band:
          type: str
          choices:
            - 2ghz-b
            - 2ghz-b/g
            - 2ghz-b/g/n
            - 2ghz-onlyg
            - 2ghz-onlyn
            - 5ghz-a
            - 5ghz-a/n
            - 5ghz-a/n/ac
            - 5ghz-only-ac
            - 5ghz-onlyn
        channel_control_channel_width:
          type: str
          choices:
            - 10mhz
            - 20mhz
            - 40mhz-turbo
            - 5mhz
        channel_extension_channel:
          type: str
          choices:
            - Ce
            - Ceee
            - disabled
            - eC
            - eCee
            - eeCe
            - eeeC
            - xx
            - xxxx
        channel_frequency:
          type: int
        channel_reselect_interval:
          type: str
        channel_save_selected:
          type: bool
          default: 'False'
        channel_secondary_frequency:
          type: int
          default: 0
        channel_skip_dfs_channels:
          type: bool
          default: 'False'
        channel_tx_power:
          type: int
        channel_width:
          type: str
        comment:
          type: str
        country:
          type: str
          default: no_country_set
        datapath:
          type: str
        datapath_bridge:
          type: str
        datapath_bridge_cost:
          type: int
        datapath_bridge_horizon:
          type: int
        datapath_client_to_client_forwarding:
          type: bool
          default: 'False'
        datapath_interface_list:
          type: str
        datapath_l2mtu:
          type: str
        datapath_local_forwarding:
          type: bool
          default: 'False'
        datapath_mtu:
          type: str
        datapath_openflow_switch:
          type: str
        datapath_vlan_id:
          type: int
        datapath_vlan_mode:
          type: str
          choices:
            - use-service-tag
            - use-tag
        disabled:
          type: bool
          default: 'False'
        disconnect_timeout:
          type: str
        distance:
          type: str
        frame_lifetime:
          type: str
        guard_interval:
          type: str
          choices:
            - any
            - long
          default: any
        hide_ssid:
          type: bool
        hw_protection_mode:
          type: str
        hw_retries:
          type: str
        installation:
          type: str
          choices:
            - any
            - indoor
            - outdoor
          default: any
        keepalive_frames:
          type: str
          choices:
            - disabled
            - enabled
          default: enabled
        load_balancing_group:
          type: str
        max_sta_count:
          type: int
        mode:
          type: str
          default: ap
        multicast_helper:
          type: str
          choices:
            - default
            - disabled
            - full
          default: default
        name:
          type: str
          required: 'True'
        rates:
          type: str
        rates_basic:
          type: str
          choices:
            - 11Mbps
            - 11Mbps
            - 12Mbps
            - 18Mbps
            - 1Mbps
            - 24Mbps
            - 2Mbps
            - 36Mbps
            - 48Mbps
            - 5.5Mbps
            - 54Mbps
            - 6Mbps
        rates_ht_basic_mcs:
          type: list
          choices:
            - mcs-0
            - mcs-1
            - mcs-10
            - mcs-11
            - mcs-12
            - mcs-13
            - mcs-14
            - mcs-15
            - mcs-16
            - mcs-17
            - mcs-18
            - mcs-19
            - mcs-2
            - mcs-20
            - mcs-21
            - mcs-22
            - mcs-23
            - mcs-3
            - mcs-4
            - mcs-5
            - mcs-6
            - mcs-7
            - mcs-8
            - mcs-9
          default:
            - mcs-0
            - mcs-1
            - mcs-2
            - mcs-3
            - mcs-4
            - mcs-5
            - mcs-6
            - mcs-7
        rates_ht_supported_mcs:
          type: list
          choices:
            - mcs-0
            - mcs-1
            - mcs-10
            - mcs-11
            - mcs-12
            - mcs-13
            - mcs-14
            - mcs-15
            - mcs-16
            - mcs-17
            - mcs-18
            - mcs-19
            - mcs-2
            - mcs-20
            - mcs-21
            - mcs-22
            - mcs-23
            - mcs-3
            - mcs-4
            - mcs-5
            - mcs-6
            - mcs-7
            - mcs-8
            - mcs-9
          default:
            - mcs-0
            - mcs-1
            - mcs-2
            - mcs-3
            - mcs-4
            - mcs-5
            - mcs-6
            - mcs-7
            - mcs-8
            - mcs-9
            - mcs-10
            - mcs-11
            - mcs-12
            - mcs-13
            - mcs-14
            - mcs-15
            - mcs-16
            - mcs-17
            - mcs-18
            - mcs-19
            - mcs-20
            - mcs-21
            - mcs-22
            - mcs-23
        rates_supported:
          type: str
          choices:
            - 11Mbps
            - 11Mbps
            - 12Mbps
            - 18Mbps
            - 1Mbps
            - 24Mbps
            - 2Mbps
            - 36Mbps
            - 48Mbps
            - 5.5Mbps
            - 54Mbps
            - 6Mbps
        rates_vht_basic_mcs:
          type: str
          choices:
            - 'MCS 0-7'
            - 'MCS 0-8'
            - 'MCS 0-9'
            - none
        rates_vht_supported_mcs:
          type: str
          choices:
            - 'MCS 0-7'
            - 'MCS 0-8'
            - 'MCS 0-9'
            - none
        rx_chains:
          type: list
          choices:
            - 0
            - 1
            - 2
            - 3
          default: 'a:1:{i:0;i:0;}'
        security:
          type: str
        security_authentication_types:
          type: list
          choices:
            - wpa-psk
            - wpa2-psk
            - wpa-eap
            - wpa2-eap
        security_disable_pmkid:
          type: str
        security_eap_methods:
          type: str
          choices:
            - eap-tls
            - passthrough
        security_eap_radius_accounting:
          type: str
        security_encryption:
          type: list
          choices:
            - aes-ccm
            - tkip
        security_group_encryption:
          type: str
          choices:
            - aes-ccm
            - tkip
          default: aes-ccm
        security_group_key_update:
          type: str
          default: 5m
        security_passphrase:
          type: str
        security_tls_certificate:
          type: str
          choices:
            - name
            - none
        security_tls_mode:
          type: str
          choices:
            - dont-verify-certificate
            - no-certificates
            - verify-certificate
            - verify-certificate-with-crl
        ssid:
          type: str
        tx_chains:
          type: list
          choices:
            - 0
            - 1
            - 2
            - 3
          default: 'a:1:{i:0;i:0;}'
  custom_props:
    channel_band:
      original_name: channel.band
    channel_control_channel_width:
      original_name: channel.control-channel-width
    channel_extension_channel:
      original_name: channel.extension-channel
    channel_frequency:
      original_name: channel.frequency
    channel_reselect_interval:
      original_name: channel.reselect-interval
    channel_save_selected:
      original_name: channel.save-selected
    channel_secondary_frequency:
      original_name: channel.secondary-frequency
    channel_skip_dfs_channels:
      original_name: channel.skip-dfs-channels
    channel_tx_power:
      original_name: channel.tx-power
    channel_width:
      original_name: channel.width
    datapath_bridge:
      original_name: datapath.bridge
    datapath_bridge_cost:
      original_name: datapath.bridge-cost
    datapath_bridge_horizon:
      original_name: datapath.bridge-horizon
    datapath_client_to_client_forwarding:
      original_name: datapath.client-to-client-forwarding
    datapath_interface_list:
      original_name: datapath.interface-list
    datapath_l2mtu:
      original_name: datapath.l2mtu
    datapath_local_forwarding:
      original_name: datapath.local-forwarding
    datapath_mtu:
      original_name: datapath.mtu
    datapath_openflow_switch:
      original_name: datapath.openflow-switch
    datapath_vlan_id:
      original_name: datapath.vlan-id
    datapath_vlan_mode:
      original_name: datapath.vlan-mode
    rates_basic:
      original_name: rates.basic
    rates_ht_basic_mcs:
      original_name: rates.ht-basic-mcs
    rates_ht_supported_mcs:
      original_name: rates.ht-supported-mcs
    rates_supported:
      original_name: rates.supported
    rates_vht_basic_mcs:
      original_name: rates.vht-basic-mcs
    rates_vht_supported_mcs:
      original_name: rates.vht-supported-mcs
    security_authentication_types:
      original_name: security.authentication-types
    security_disable_pmkid:
      original_name: security.disable-pmkid
    security_eap_methods:
      original_name: security.eap-methods
    security_eap_radius_accounting:
      original_name: security.eap-radius-accounting
    security_encryption:
      original_name: security.encryption
    security_group_encryption:
      original_name: security.group-encryption
    security_group_key_update:
      original_name: security.group-key-update
    security_passphrase:
      original_name: security.passphrase
    security_tls_certificate:
      original_name: security.tls-certificate
    security_tls_mode:
      original_name: security.tls-mode
tests:
  facts:
    name: capsman_configuration
    type: config
    fixture_contents: |
      # RouterOS Output
      #
      /caps-man configuration
      add name=test
    fixtures:
      - action: add
        values:
          name: test
  unit:
    module_name: ros_capsman_configuration
    fixture_contents: |
      # RouterOS Output
      #
      /caps-man configuration
      add name=test
    tests:
      - commands:
          - '/caps-man configuration set [ find name=test ] datapath.bridge=br-trunk rx-chains=0,1,2'
          - '/caps-man configuration add datapath.bridge=br-trunk name=new'
        argument_spec:
          state: merged
          config:
            - { datapath_bridge: br-trunk, name: test, rx_chains: [0, 1, 2] }
            - { datapath_bridge: br-trunk, name: new }
